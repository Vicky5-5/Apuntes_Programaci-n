- Bucles indeterminados. Sin ejecutar el programa no sabes cuántas veces se va a ejecutar el código de dentro del bucle
  --> while
  --> do - while

- Bucles determinados. Lo contrario al indeterminado

  --> for
  --> for each

*******WHILE******

package PracticasPruebas;

import javax.swing.JOptionPane;

public class usoWhile {

	public static void main(String[] args) {

		String usuario = "Hola";
		String password ="";
			while(usuario.equals(password)==false) {
				password = JOptionPane.showInputDialog("Introduce la contraseña: ");
			
			if(usuario.equals(password)==false) System.out.println("Contraseña incorrecta.");
			
			}
			System.out.println("Acceso correcto");
				
	}

}
******DO - WHILE *******
- Nos aseguramos que el código se ejecute una vez

package PracticasPruebas;

import java.util.Scanner;

public class Do_whileUso {

	public static void main(String[] args) {
		Scanner teclado = new Scanner(System.in);
		int intentos = 0;
		int aleatorio = (int)(Math.random()*100); //Numero random del 1 al 10
		//Esto puede dar problemas pues que puede dar 0, por eso usamos do-while
		// para que al menos nos pase por el bucle una vez
		System.out.println("Inserte un número del 0 al 99");
		int num = teclado.nextInt();
		
		do {
			intentos++;

			if(aleatorio < num) {
			System.out.println("El numero es pequeño. Inserta de nuevo: ");
			num = teclado.nextInt();
			}else {
				System.out.println("El numero es mayor. Inserta de nuevo: ");
				num = teclado.nextInt();
			}
		}while(aleatorio != num);
		System.out.println("¡Has acertado! Han sido: " + intentos + " intentos");
		teclado.close();
	}

}
